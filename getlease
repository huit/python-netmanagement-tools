#!/usr/bin/python
import sys
import argparse
import logging

import ibquery
import netmriquery
import json

def main():

    parser = argparse.ArgumentParser(description='Find information about dhcp leases',
                                     formatter_class=argparse.RawDescriptionHelpFormatter,
                                     epilog='''
Example: getlease -i 128.103.209.90'''
                                     )
    
    parser.add_argument('--loglevel', dest='loglevel', type=str,
                        choices = ['DEBUG','INFO','WARNING','ERROR', 'CRITICAL'],
                        default = 'WARNING',
                        help='set logging level (DEBUG, INFO, WARNING, ERROR, CRITICAL)')
    parser.add_argument('-i', '--ip', dest='ipaddr', type=str,
                        help='end host ip address')
    args = parser.parse_args()

    ipaddr = args.ipaddr
    loglevel = args.loglevel
    if loglevel == 'DEBUG':
        logging.basicConfig(level=logging.DEBUG)

    ib = ibquery.InfobloxConn('ib.cfg')
    netmri = netmriquery.NetMRIConn('netmri.cfg')

    r = ib.getleasebyip(ipaddr, 'address,billing_class,binding_state,client_hostname,cltt,discovered_data,ends,hardware,network,network_view,never_ends,never_starts,next_binding_state,on_commit,on_expiry,on_release,option,protocol,served_by,server_host_name,starts,tsfp,tstp,uid,username,variable', 10000)
    if r is not None:
        logging.debug (json.dumps(r, separators=(',',':'), sort_keys=True, indent=4))
        for i in r:
            print i['address'] + ',' + i['username'] + ',' + i['variable'] + ',',
            netdev = i['discovered_data']
            print netdev['network_component_name'] + ',' + netdev['network_component_port_name'] + ',',
            print netdev['network_component_port_description'] + ',' + netdev['port_vlan_name'] + ',' + str(netdev['port_vlan_number'])
    else:
        print 'no lease information found for that address'

if __name__ == '__main__':
    sys.exit(main())
